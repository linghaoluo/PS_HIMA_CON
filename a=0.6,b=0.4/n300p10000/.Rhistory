{
miss[i]=results[[j]][fp[i],'BH.FDR']<0.05
fpr[j]<-sum(miss)
}
tp[j] = sum(results[[j]][,'BH.FDR']<0.05)
}
return(mean(fpr/tp,na.rm = TRUE))
}
Fpr=rbind(fpr_num(results_Cov_n300p10000),fpr_num(results_Pscov_n300p10000),
fpr_num(results_Iptw_n300p10000),fpr_num(results_Pscw_n300p10000),fpr_num(results_Non_n300p10000))
Fpr
Fpr=data.frame(Fpr,
row.names=c('Cov','Pscov','Iptw','Pscw','Non'))
# FDR - 每一次假阳性比例
Fdr=rbind(FDR(results_Cov_n300p10000),FDR(results_Pscov_n300p10000),
FDR(results_Iptw_n300p10000),FDR(results_Pscw_n300p10000),FDR(results_Non_n300p10000))
Fdr
Fdr=data.frame(Fdr,
row.names=c('Cov','Pscov','Iptw','Pscw','Non'))
# FDR - 每一次假阳性比例
Fdr=rbind(FDR(results_Cov_n300p10000),FDR(results_Pscov_n300p10000),
FDR(results_Iptw_n300p10000),FDR(results_Pscw_n300p10000),FDR(results_Non_n300p10000))
Fdr
Fdr=data.frame(Fdr,
row.names=c('Cov','Pscov','Iptw','Pscw','Non'))
Fdr
data_a6b4n300p1000<-read.csv("D:/Personal Files/Yu lab/HIMACon小论文/All_results_version2.0/All_results_version2.0/plot/a6b4/a6b4n300p1000.csv")
library(RColorBrewer)
mycol=brewer.pal(n=12,name='Set3')
p1<-ggplot(data_a6b4n300p1000, aes(x=Mediator, y=relerror, fill=Method)) +
geom_bar(stat="identity", position=position_dodge(),color="black", width=.6) +
scale_fill_manual(values = mycol) +
annotate("text",x=7,y=0.5,label="n=300,p=1000")+
#geom_errorbar(aes(ymin=Mean-Std, ymax=Mean +Std),position=position_dodge(.6), width=.2)
theme_bw()
library("ggthemes")
library(ggplot2)
library(ggsci)
library(cowplot)
# Multiple plot function
#
# ggplot objects can be passed in ..., or to plotlist (as a list of ggplot objects)
# - cols:   Number of columns in layout
# - layout: A matrix specifying the layout. If present, 'cols' is ignored.
#
# If the layout is something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE),
# then plot 1 will go in the upper left, 2 will go in the upper right, and
# 3 will go all the way across the bottom.
#
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
data_a6b4n300p1000<-read.csv("D:/Personal Files/Yu lab/HIMACon小论文/All_results_version2.0/All_results_version2.0/plot/a6b4/a6b4n300p1000.csv")
library(RColorBrewer)
mycol=brewer.pal(n=12,name='Set3')
p1<-ggplot(data_a6b4n300p1000, aes(x=Mediator, y=relerror, fill=Method)) +
geom_bar(stat="identity", position=position_dodge(),color="black", width=.6) +
scale_fill_manual(values = mycol) +
annotate("text",x=7,y=0.5,label="n=300,p=1000")+
#geom_errorbar(aes(ymin=Mean-Std, ymax=Mean +Std),position=position_dodge(.6), width=.2)
theme_bw()
p1
data_a6b4n300p1000<-read.csv("D:/Personal Files/Yu lab/HIMACon小论文/All_results_version2.0/All_results_version2.0/plot/a6b4/a6b4n300p1000.csv")
library(RColorBrewer)
mycol=brewer.pal(n=12,name='Set3')
p1<-ggplot(data_a6b4n300p1000, aes(x=Mediator, y=relerror, fill=Method)) +
geom_bar(stat="identity", position=position_dodge(),color="black", width=.6) +
scale_fill_manual(values = mycol) +
annotate("text",x=7,y=0.5,label="n=300,p=1000")+
#geom_errorbar(aes(ymin=Mean-Std, ymax=Mean +Std),position=position_dodge(.6), width=.2)
theme_bw()
p1
data_a6b4n300p1000<-read.csv("D:/Personal Files/Yu lab/HIMACon小论文/All_results_version2.0/All_results_version2.0/plot/a6b4/a6b4n300p1000.csv")
library(RColorBrewer)
mycol=brewer.pal(n=12,name='Set3')
p1<-ggplot(data_a6b4n300p1000, aes(x=Mediator, y=relerror, fill=Method)) +
geom_bar(stat="identity", position=position_dodge(),color="black", width=.6) +
scale_fill_manual(values = mycol) +
annotate("text",x=7,y=0.5,label="n=300,p=1000")+
#geom_errorbar(aes(ymin=Mean-Std, ymax=Mean +Std),position=position_dodge(.6), width=.2)
theme_bw()
p1
data_a6b4n300p1000<-read.csv("D:/Personal Files/Yu lab/HIMACon小论文/All_results_version2.0/All_results_version2.0/plot/a6b4/a6b4n300p1000.csv")
View(data_a6b4n300p1000)
library(RColorBrewer)
mycol=brewer.pal(n=12,name='Set3')
p1<-ggplot(data_a6b4n300p1000, aes(x=Mediator, y=relerror, fill=Method)) +
geom_bar(stat="identity", position=position_dodge(),color="black", width=.6) +
scale_fill_manual(values = mycol) +
annotate("text",x=7,y=0.5,label="n=300,p=1000")+
#geom_errorbar(aes(ymin=Mean-Std, ymax=Mean +Std),position=position_dodge(.6), width=.2)
theme_bw()
p1
p1<-ggplot(data_a6b4n300p1000, aes(x=Mediator, y=relerror, fill=Method,fct_reorder(Mediator,relerror)) +
library(RColorBrewer)
mycol=brewer.pal(n=12,name='Set3')
p1<-ggplot(data_a6b4n300p1000, aes(x=Mediator, y=relerror, fill=Method,fct_reorder(Mediator,relerror)) +
scale_fill_manual(values = mycol) +
p1<-ggplot(data_a6b4n300p1000, aes(x=Mediator, y=relerror, fill=Method,fct_reorder(Mediator,relerror)) +
scale_fill_manual(values = mycol) +
#geom_errorbar(aes(ymin=Mean-Std, ymax=Mean +Std),position=position_dodge(.6), width=.2)
p1
p1<-ggplot(data_a6b4n300p1000, aes(x=Mediator, y=relerror, fill=Method) +
scale_fill_manual(values = mycol) +
p1<-ggplot(data_a6b4n300p1000, aes(x=Mediator, y=relerror, fill=Method, fct_reorder(Mediator,relerror))) +
geom_bar(stat="identity", position=position_dodge(),color="black", width=.6) +
scale_fill_manual(values = mycol) +
annotate("text",x=7,y=0.5,label="n=300,p=1000")+
#geom_errorbar(aes(ymin=Mean-Std, ymax=Mean +Std),position=position_dodge(.6), width=.2)
theme_bw()
p1
mycol=brewer.pal(n=12,name='Set3')
p1<-ggplot(data_a6b4n300p1000, aes(x=Mediator, y=relerror, fill=Method, fct_reorder(Mediator,relerror))) +
geom_bar(stat="identity", position=position_dodge(),color="black", width=.6) +
scale_fill_manual(values = mycol) +
annotate("text",x=7,y=0.5,label="n=300,p=1000")+
#geom_errorbar(aes(ymin=Mean-Std, ymax=Mean +Std),position=position_dodge(.6), width=.2)
theme_bw()
p1
p1<-ggplot(data_a6b4n300p1000, aes(x=Mediator, y=relerror, fill=Method, fct_reorder(Method,relerror))) +
geom_bar(stat="identity", position=position_dodge(),color="black", width=.6) +
scale_fill_manual(values = mycol) +
annotate("text",x=7,y=0.5,label="n=300,p=1000")+
#geom_errorbar(aes(ymin=Mean-Std, ymax=Mean +Std),position=position_dodge(.6), width=.2)
theme_bw()
p1
data_a6b4n300p1000
data_a6b4n300p1000$Method
data_a6b4n300p1000$Method = factor(data_a6b4n300p1000$Method,levels=c('PSR','PSW','PSU','COV'))
View(data_a6b4n300p1000)
data_a6b4n300p1000<-read.csv("D:/Personal Files/Yu lab/HIMACon小论文/All_results_version2.0/All_results_version2.0/plot/a6b4/a6b4n300p1000.csv")
data_a6b4n300p1000$Method = factor(data_a6b4n300p1000$Method,levels=c('PSR','PSW','PSU','COV'))
library(RColorBrewer)
mycol=brewer.pal(n=12,name='Set3')
p1<-ggplot(data_a6b4n300p1000, aes(x=Mediator, y=relerror, fill=Method, )) +
geom_bar(stat="identity", position=position_dodge(),color="black", width=.6) +
scale_fill_manual(values = mycol) +
annotate("text",x=7,y=0.5,label="n=300,p=1000")+
#geom_errorbar(aes(ymin=Mean-Std, ymax=Mean +Std),position=position_dodge(.6), width=.2)
theme_bw()
p1
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
data_a6b4n300p1000<-read.csv("D:/Personal Files/Yu lab/HIMACon小论文/All_results_version2.0/All_results_version2.0/plot/a6b4/a6b4n300p1000.csv")
data_a6b4n300p1000$Method = factor(data_a6b4n300p1000$Method,levels=c('PSR','PSW','PSU','COV'))
library(RColorBrewer)
mycol=brewer.pal(n=12,name='Set3')
p1<-ggplot(data_a6b4n300p1000, aes(x=Mediator, y=relerror, fill=Method, )) +
geom_bar(stat="identity", position=position_dodge(),color="black", width=.6) +
scale_fill_manual(values = mycol) +
annotate("text",x=7,y=0.5,label="n=300,p=1000")+
#geom_errorbar(aes(ymin=Mean-Std, ymax=Mean +Std),position=position_dodge(.6), width=.2)
theme_bw()
p1
data_a6b4n300p10000<-read.csv("D:/Personal Files/Yu lab/HIMACon小论文/All_results_version2.0/All_results_version2.0/plot/a6b4/a6b4n300p10000.csv")
data_a6b4n300p10000$Method = factor(data_a6b4n300p10000$Method,levels=c('PSR','PSW','PSU','COV'))
library(RColorBrewer)
mycol=brewer.pal(n=12,name='Set3')
p2<-ggplot(data_a6b4n300p10000, aes(x=Mediator, y=relerror, fill=Method)) +
geom_bar(stat="identity", position=position_dodge(),color="black", width=.6) +
scale_fill_manual(values = mycol) +
annotate("text",x=7,y=0.5,label="n=300,p=10000")+
#geom_errorbar(aes(ymin=Mean-Std, ymax=Mean +Std),position=position_dodge(.6), width=.2)
theme_bw()
p2
data_a6b4n500p1000<-read.csv("D:/Personal Files/Yu lab/HIMACon小论文/All_results_version2.0/All_results_version2.0/plot/a6b4/a6b4n500p1000.csv")
data_a6b4n500p1000$Method = factor(data_a6b4n500p1000$Method,levels=c('PSR','PSW','PSU','COV'))
library(RColorBrewer)
mycol=brewer.pal(n=12,name='Set3')
p3<-ggplot(data_a6b4n500p1000, aes(x=Mediator, y=relerror, fill=Method)) +
geom_bar(stat="identity", position=position_dodge(),color="black", width=.6) +
scale_fill_manual(values = mycol) +
annotate("text",x=7,y=0.5,label="n=500,p=1000")+
#geom_errorbar(aes(ymin=Mean-Std, ymax=Mean +Std),position=position_dodge(.6), width=.2)
theme_bw()
p3
data_a6b4n500p10000<-read.csv("D:/Personal Files/Yu lab/HIMACon小论文/All_results_version2.0/All_results_version2.0/plot/a6b4/a6b4n500p10000.csv")
data_a6b4n500p10000$Method = factor(data_a6b4n500p10000$Method,levels=c('PSR','PSW','PSU','COV'))
library(RColorBrewer)
mycol=brewer.pal(n=12,name='Set3')
p4<-ggplot(data_a6b4n500p10000, aes(x=Mediator, y=relerror, fill=Method)) +
geom_bar(stat="identity", position=position_dodge(),color="black", width=.6) +
scale_fill_manual(values = mycol) +
annotate("text",x=7,y=0.5,label="n=500,p=10000")+
#geom_errorbar(aes(ymin=Mean-Std, ymax=Mean +Std),position=position_dodge(.6), width=.2)
theme_bw()
e=plot_grid(p1, p2, p3, p4, nrow=2)
e
library("ggthemes")
library(ggplot2)
library(ggsci)
library(cowplot)
# Multiple plot function
#
# ggplot objects can be passed in ..., or to plotlist (as a list of ggplot objects)
# - cols:   Number of columns in layout
# - layout: A matrix specifying the layout. If present, 'cols' is ignored.
#
# If the layout is something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE),
# then plot 1 will go in the upper left, 2 will go in the upper right, and
# 3 will go all the way across the bottom.
#
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
data_a6b4n300p1000<-read.csv("D:/Personal Files/Yu lab/HIMACon小论文/All_results_version2.0/All_results_version2.0/plot/a6b4/a6b4n300p1000.csv")
data_a6b4n300p1000$Method = factor(data_a6b4n300p1000$Method,levels=c('PSR','PSW','PSU','COV'))
library(RColorBrewer)
mycol=brewer.pal(n=12,name='Set3')
p1<-ggplot(data_a6b4n300p1000, aes(x=Mediator, y=relerror, fill=Method, )) +
geom_bar(stat="identity", position=position_dodge(),color="black", width=.6) +
scale_fill_manual(values = mycol) +
annotate("text",x=7,y=0.5,label="n=300,p=1000")+
#geom_errorbar(aes(ymin=Mean-Std, ymax=Mean +Std),position=position_dodge(.6), width=.2)
theme_bw()
p1
data_a6b4n300p10000<-read.csv("D:/Personal Files/Yu lab/HIMACon小论文/All_results_version2.0/All_results_version2.0/plot/a6b4/a6b4n300p10000.csv")
data_a6b4n300p10000$Method = factor(data_a6b4n300p10000$Method,levels=c('PSR','PSW','PSU','COV'))
library(RColorBrewer)
mycol=brewer.pal(n=12,name='Set3')
p2<-ggplot(data_a6b4n300p10000, aes(x=Mediator, y=relerror, fill=Method)) +
geom_bar(stat="identity", position=position_dodge(),color="black", width=.6) +
scale_fill_manual(values = mycol) +
annotate("text",x=7,y=0.5,label="n=300,p=10000")+
#geom_errorbar(aes(ymin=Mean-Std, ymax=Mean +Std),position=position_dodge(.6), width=.2)
theme_bw()
p2
data_a6b4n500p1000<-read.csv("D:/Personal Files/Yu lab/HIMACon小论文/All_results_version2.0/All_results_version2.0/plot/a6b4/a6b4n500p1000.csv")
data_a6b4n500p1000$Method = factor(data_a6b4n500p1000$Method,levels=c('PSR','PSW','PSU','COV'))
library(RColorBrewer)
mycol=brewer.pal(n=12,name='Set3')
p3<-ggplot(data_a6b4n500p1000, aes(x=Mediator, y=relerror, fill=Method)) +
geom_bar(stat="identity", position=position_dodge(),color="black", width=.6) +
scale_fill_manual(values = mycol) +
annotate("text",x=7,y=0.5,label="n=500,p=1000")+
#geom_errorbar(aes(ymin=Mean-Std, ymax=Mean +Std),position=position_dodge(.6), width=.2)
theme_bw()
p3
data_a6b4n500p10000<-read.csv("D:/Personal Files/Yu lab/HIMACon小论文/All_results_version2.0/All_results_version2.0/plot/a6b4/a6b4n500p10000.csv")
data_a6b4n500p10000$Method = factor(data_a6b4n500p10000$Method,levels=c('PSR','PSW','PSU','COV'))
library(RColorBrewer)
mycol=brewer.pal(n=12,name='Set3')
p4<-ggplot(data_a6b4n500p10000, aes(x=Mediator, y=relerror, fill=Method)) +
geom_bar(stat="identity", position=position_dodge(),color="black", width=.6) +
scale_fill_manual(values = mycol) +
annotate("text",x=7,y=0.5,label="n=500,p=10000")+
#geom_errorbar(aes(ymin=Mean-Std, ymax=Mean +Std),position=position_dodge(.6), width=.2)
theme_bw()
e=plot_grid(p1, p2, p3, p4, nrow=2)
e
ggsave("a6b4new.png", e , width = 9, height = 6, dpi = 300)
a=c()
# Multiple plot function
#
# ggplot objects can be passed in ..., or to plotlist (as a list of ggplot objects)
# - cols:   Number of columns in layout
# - layout: A matrix specifying the layout. If present, 'cols' is ignored.
#
# If the layout is something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE),
# then plot 1 will go in the upper left, 2 will go in the upper right, and
# 3 will go all the way across the bottom.
#
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
data_a6b4n300p1000<-read.csv("D:/Personal Files/Yu lab/HIMACon小论文/All_results_version2.0/All_results_version2.0/plot/a6b4/a6b4n300p1000.csv")
data_a6b4n300p1000$Method = factor(data_a6b4n300p1000$Method,levels=c('PSR','PSW','PSU','COV'))
library(RColorBrewer)
mycol=brewer.pal(n=12,name='Set3')
p1<-ggplot(data_a6b4n300p1000, aes(x=Mediator, y=relerror, fill=Method, )) +
geom_bar(stat="identity", position=position_dodge(),color="black", width=.6) +
scale_fill_manual(values = mycol) +
annotate("text",x=7,y=0.5,label="n=300,p=1000")+
#geom_errorbar(aes(ymin=Mean-Std, ymax=Mean +Std),position=position_dodge(.6), width=.2)
theme_bw()
p1
data_a6b4n300p10000<-read.csv("D:/Personal Files/Yu lab/HIMACon小论文/All_results_version2.0/All_results_version2.0/plot/a6b4/a6b4n300p10000.csv")
data_a6b4n300p10000$Method = factor(data_a6b4n300p10000$Method,levels=c('PSR','PSW','PSU','COV'))
library(RColorBrewer)
mycol=brewer.pal(n=12,name='Set3')
p2<-ggplot(data_a6b4n300p10000, aes(x=Mediator, y=relerror, fill=Method)) +
geom_bar(stat="identity", position=position_dodge(),color="black", width=.6) +
scale_fill_manual(values = mycol) +
annotate("text",x=7,y=0.5,label="n=300,p=10000")+
#geom_errorbar(aes(ymin=Mean-Std, ymax=Mean +Std),position=position_dodge(.6), width=.2)
theme_bw()
p2
data_a6b4n500p1000<-read.csv("D:/Personal Files/Yu lab/HIMACon小论文/All_results_version2.0/All_results_version2.0/plot/a6b4/a6b4n500p1000.csv")
data_a6b4n500p1000$Method = factor(data_a6b4n500p1000$Method,levels=c('PSR','PSW','PSU','COV'))
library(RColorBrewer)
mycol=brewer.pal(n=12,name='Set3')
p3<-ggplot(data_a6b4n500p1000, aes(x=Mediator, y=relerror, fill=Method)) +
geom_bar(stat="identity", position=position_dodge(),color="black", width=.6) +
scale_fill_manual(values = mycol) +
annotate("text",x=7,y=0.5,label="n=500,p=1000")+
#geom_errorbar(aes(ymin=Mean-Std, ymax=Mean +Std),position=position_dodge(.6), width=.2)
theme_bw()
p3
data_a6b4n500p10000<-read.csv("D:/Personal Files/Yu lab/HIMACon小论文/All_results_version2.0/All_results_version2.0/plot/a6b4/a6b4n500p10000.csv")
data_a6b4n500p10000$Method = factor(data_a6b4n500p10000$Method,levels=c('PSR','PSW','PSU','COV'))
library(RColorBrewer)
mycol=brewer.pal(n=12,name='Set3')
p4<-ggplot(data_a6b4n500p10000, aes(x=Mediator, y=relerror, fill=Method)) +
geom_bar(stat="identity", position=position_dodge(),color="black", width=.6) +
scale_fill_manual(values = mycol) +
annotate("text",x=7,y=0.5,label="n=500,p=10000")+
#geom_errorbar(aes(ymin=Mean-Std, ymax=Mean +Std),position=position_dodge(.6), width=.2)
theme_bw()
e=plot_grid(p1, p2, p3, p4, nrow=2)
e
ggsave("a6b4new.png", e , width = 9, height = 6, dpi = 300)
getwd()
p4<-ggplot(data_a6b4n500p10000, aes(x=Mediator, y=relerror, fill=Method)) +
geom_bar(stat="identity", position=position_dodge(),color="black", width=.6) +
scale_fill_manual(values = mycol) +
annotate("text",x=7,y=0.5,label="n=500,p=10000")+
#geom_errorbar(aes(ymin=Mean-Std, ymax=Mean +Std),position=position_dodge(.6), width=.2)
theme_bw()
e=plot_grid(p1, p2, p3, p4, nrow=2)
e
ggsave("a6b4new.png", e , width = 9, height = 6, dpi = 300)
library("ggthemes")
library(ggplot2)
library(ggsci)
library(cowplot)
# Multiple plot function
#
# ggplot objects can be passed in ..., or to plotlist (as a list of ggplot objects)
# - cols:   Number of columns in layout
# - layout: A matrix specifying the layout. If present, 'cols' is ignored.
#
# If the layout is something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE),
# then plot 1 will go in the upper left, 2 will go in the upper right, and
# 3 will go all the way across the bottom.
#
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
data_a6b4n300p1000<-read.csv("D:/Personal Files/Yu lab/HIMACon小论文/All_results_version2.0/All_results_version2.0/plot/a6b4/a6b4n300p1000.csv")
data_a6b4n300p1000$Method = factor(data_a6b4n300p1000$Method,levels=c('PSR','PSW','PSU','COV'))
library(RColorBrewer)
mycol=brewer.pal(n=12,name='Set3')
p1<-ggplot(data_a6b4n300p1000, aes(x=Mediator, y=relerror, fill=Method, )) +
geom_bar(stat="identity", position=position_dodge(),color="black", width=.6) +
scale_fill_manual(values = mycol) +
annotate("text",x=7,y=0.5,label="n=300,p=1000")+
#geom_errorbar(aes(ymin=Mean-Std, ymax=Mean +Std),position=position_dodge(.6), width=.2)
theme_bw()
p1
data_a6b4n300p10000<-read.csv("D:/Personal Files/Yu lab/HIMACon小论文/All_results_version2.0/All_results_version2.0/plot/a6b4/a6b4n300p10000.csv")
data_a6b4n300p10000$Method = factor(data_a6b4n300p10000$Method,levels=c('PSR','PSW','PSU','COV'))
library(RColorBrewer)
mycol=brewer.pal(n=12,name='Set3')
p2<-ggplot(data_a6b4n300p10000, aes(x=Mediator, y=relerror, fill=Method)) +
geom_bar(stat="identity", position=position_dodge(),color="black", width=.6) +
scale_fill_manual(values = mycol) +
annotate("text",x=7,y=0.5,label="n=300,p=10000")+
#geom_errorbar(aes(ymin=Mean-Std, ymax=Mean +Std),position=position_dodge(.6), width=.2)
theme_bw()
p2
data_a6b4n500p1000<-read.csv("D:/Personal Files/Yu lab/HIMACon小论文/All_results_version2.0/All_results_version2.0/plot/a6b4/a6b4n500p1000.csv")
data_a6b4n500p1000$Method = factor(data_a6b4n500p1000$Method,levels=c('PSR','PSW','PSU','COV'))
library(RColorBrewer)
mycol=brewer.pal(n=12,name='Set3')
p3<-ggplot(data_a6b4n500p1000, aes(x=Mediator, y=relerror, fill=Method)) +
geom_bar(stat="identity", position=position_dodge(),color="black", width=.6) +
scale_fill_manual(values = mycol) +
annotate("text",x=7,y=0.5,label="n=500,p=1000")+
#geom_errorbar(aes(ymin=Mean-Std, ymax=Mean +Std),position=position_dodge(.6), width=.2)
theme_bw()
p3
data_a6b4n500p10000<-read.csv("D:/Personal Files/Yu lab/HIMACon小论文/All_results_version2.0/All_results_version2.0/plot/a6b4/a6b4n500p10000.csv")
data_a6b4n500p10000$Method = factor(data_a6b4n500p10000$Method,levels=c('PSR','PSW','PSU','COV'))
library(RColorBrewer)
mycol=brewer.pal(n=12,name='Set3')
p4<-ggplot(data_a6b4n500p10000, aes(x=Mediator, y=relerror, fill=Method)) +
geom_bar(stat="identity", position=position_dodge(),color="black", width=.6) +
scale_fill_manual(values = mycol) +
annotate("text",x=7,y=0.5,label="n=500,p=10000")+
#geom_errorbar(aes(ymin=Mean-Std, ymax=Mean +Std),position=position_dodge(.6), width=.2)
theme_bw()
e=plot_grid(p1, p2, p3, p4, nrow=2)
e
ggsave("a6b4new.png", e , width = 9, height = 6, dpi = 300)
a=c()
View(Fdr)
