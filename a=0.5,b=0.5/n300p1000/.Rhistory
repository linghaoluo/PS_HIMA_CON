}
} else{print('method input error')}
## 閺嶈宓乸-value 缁涙盯鈧）?
b_sort<-sort(p_b)
d<-ceiling(2*n/log(n))
ID <- which(p_b<= b_sort[d])  # the index of top mediators
M_SIS <- sim_data[['M']][, ID]
XM <- cbind(M_SIS, sim_data$X)
library(ncvreg)
############### 缁楊兛绨╁銉窗MCP 鏉╂稐绔村銉х摣闁）? ###############
if (method %in% c('None','Non','Psuni','Iptw')){
MCPfit <- ncvreg(XM, sim_data$Y,
penalty.factor = c(rep(1, ncol(M_SIS)),0))
} else if (method %in% c('Pscov')) {
XM <- cbind(M_SIS, sim_data$X,sim_data$pr)
MCPfit <- ncvreg(XM, sim_data$Y,
penalty.factor = c(rep(1, ncol(M_SIS)),0,0))
} else if (method %in% c('Cov')) {
XM <- cbind(M_SIS, sim_data$X,sim_data$Z[,1],sim_data$Z[,2],sim_data$Z[,3],sim_data$Z[,4]
,sim_data$Z[,5],sim_data$Z[,6],sim_data$Z[,7],
sim_data$Z[,8],sim_data$Z[,9],sim_data$Z[,10])
MCPfit <- ncvreg(XM, sim_data$Y,
penalty.factor = c(rep(1, ncol(M_SIS)), 0,0,0,0,0,0,0,0,0,0,0))
} else {print('method input error')}
#plot(MCPfit)
lam <- MCPfit$lambda[which.min(BIC(MCPfit))]
MCPcoefficients <- coef(MCPfit, lambda = lam)
est <- MCPcoefficients[2:(d + 1)]
ID_1_non <- which(est != 0)
beta_est <- est[ID_1_non]  # The non-zero MCP estimators of beta
ID_test <- ID[ID_1_non]  # The index of the ID of non-zero beta in Y ~ M
############### 閼辨柨鎮庨弰鎹愭啿閹勵梾妤?? ###############
## 浼?
a_N <- e_a[ID_test] # 濮濓絽鐖堕弶鍐櫢閻ㄥ嫀?
alpha_est_ID_test <- as.numeric(a_N)  #  the estimator for alpha
alpha <- p_a[ID_test, drop = FALSE]
P_adjust_alpha <- length(ID_test) * alpha  # the adjusted p-value for alpha (bonferroni)
P_adjust_alpha[P_adjust_alpha > 1] <- 1
P_fdr_alpha <- p.adjust(alpha, "fdr")  # the adjusted p-value for alpha (FDR)
alpha_est <- alpha_est_ID_test
P_BH_alpha<- p.adjust(alpha,'BH')
P_BY_alpha<- p.adjust(alpha,'BY')
# 灏?
YMX <- data.frame(Y = sim_data$Y, sim_data[['M']][, ID_test, drop = FALSE], X = sim_data$X)
res <- summary(glm(Y ~ ., data = YMX))$coefficients
est <- res[2:(length(ID_test) + 1), 1]  # the estimator for beta
pvalue<-res[2:(length(ID_test) + 1), 4]
P_adjust_beta <- length(ID_test) * pvalue  # the adjused p-value for beta (bonferroni)
P_adjust_beta[P_adjust_beta > 1] <- 1
P_fdr_beta <- p.adjust(pvalue, "fdr")  # the adjusted p-value for beta (FDR)
ab_est <- alpha_est * beta_est
P_BH_beta<- p.adjust(pvalue,'BH')
P_BY_beta<- p.adjust(pvalue,'BY')
## Use the maximum value as p value
PA <- rbind(P_adjust_beta, P_adjust_alpha)
P_value <- apply(PA, 2, max)
FDRA <- rbind(P_fdr_beta, P_fdr_alpha)
FDR <- apply(FDRA, 2, max)
BYA <- rbind(P_BY_beta, P_BY_alpha)
BY <- apply(BYA, 2, max)
# Total effect
gamma_est <- totaleffect
results<- data.frame(alpha = alpha_est, beta = beta_est, gamma = gamma_est,
`alpha*beta` = ab_est, `% total effect` = ab_est/gamma_est * 100,
`BF.P` = P_value, `BH.FDR` = FDR,`BY.p` = BY, check.names = FALSE)
return(results)
}
library(stats)
library(iterators)
library(parallel)
library(foreach)
library(doParallel)
library(MASS)
library(ncvreg)
library(bda)
library(rJava)
library("xlsx")
library("matrixStats")
simdata <- function(n, p, alpha, beta, binaryOutcome = FALSE, seed) {
set.seed(seed)
Z1<-matrix(rbinom(5*n, 1, 0.3),n,5)
Sigma <- matrix(c(1,0.3,0.3,0.3,0.3,0.3,1,0.3,0.3,0.3,0.3,0.3,1,0.3,0.3,0.3,0.3,0.3,1,0.3,0.3,0.3,0.3,0.3,1),5,5)
Z2<- mvrnorm(n, rep(0, 5), Sigma)
Z<-cbind(Z1,Z2)
#瀵逛簬涓嶅悓鐨勪汉锛屼笉鍚岀敳鍩哄寲锛屾贩鏉傚彉閲忓涓粙鍙橀噺鐨勫奖鍝嶇浉鍚屻€?
phi<-c(.1,.3,.4,.4,.6,.1,.3,.4,.4,.6)#phi: confounders --> exposure
e0<-rnorm(100, 0, 1)
lopr<-Z%*%phi+e0
pr<-1/(1+exp(-lopr))  # 娣锋潅鍙橀噺浣垮緱X (0,1) 鐨勫彇鍊兼鐜?
X<-matrix(rbinom(n,1,pr),n,1)
ck <- t(runif(p, 0, 2))
M <- matrix(0, n, p)
phik<-c(0.2,0.2,0.3,0.5,0.6,0.2,0.2,0.3,0.5,0.6) #娣锋潅鍙橀噺瀵逛腑浠嬪彉閲忕殑褰卞搷
# M(杩炵画鍨?) #
for (i in 1:n) {
e <- rnorm(p, 0, 1.2)
M[i, ] <- ck + X[i] * alpha + Z[i,] %*% phik *rep(1,p) + e #confounders --> mediators : exp(0.4)
}
colnames(M) <- paste0("M", 1:ncol(M))
XMZ <- cbind(X, M, Z)  #  [X M]
B <- c(0.5, beta, phi)  # (p+1) times 1 beta鍥哄畾鏄洜涓哄浜庝笉鍚岀殑鏍锋湰锛孧i閮戒笉鏄腑闂村彉閲忥紝鍥犳涓庝腑浠嬪彉閲忕浉鍏崇殑alpha鍜宐eta鍥哄畾
E <- rnorm(n, 0, 1)
Y <- 0.5 + XMZ %*% B + E  #  the response  n times 1
if(binaryOutcome)
Y <- matrix(rbinom(n, 1, 1/(1+exp(-Y))), nrow = n)
#璁＄畻PS鍊?
fit <- glm(X~Z[,1]+Z[,2]+Z[,3]+Z[,4]+Z[,5]+Z[,6]+Z[,7]+Z[,8]+Z[,9]+Z[,10],
family = binomial(link='logit') )
PS = predict(fit, type='response') # 閫夋嫨棰勬祴鍚庣殑杈撳嚭缁撴灉鐢ㄥ湪binomial鏁版嵁锛宺esponse琛ㄧず杈撳嚭缁撴灉棰勬祴鍝嶅簲鍙橀噺涓?1鐨勬鐜?
PS <- matrix(PS, n, 1)
return(list(Y = Y, M = M, X = X, Z = Z, pr=PS, n = n, p = p))
}
results_Pscw_n300p1000<-list()
results_Iptw_n300p1000<-list()
results_Pscov_n300p1000<-list()
results_Non_n300p1000<-list()
results_Cov_n300p1000<-list()
for (v in 1:500) {
n <- 300   # sample size
p <- 1000 # the dimension of mediators
alpha <- rep(0, p)  # the regression coefficients (exposure --> mediators)
beta1 <- rep(0, p) # regression coefficients beta (mediators --> outcome);continuous outcomethe
#beta2 <- rep(0, p) # for binary outcome
# the first four markers are true mediators
alpha[1:8] <- c(0.25,0.30,0.375,0.40,0.50,0.60,0.75,1.00)
beta1[1:8] <- c(0.25,0.30,0.375,0.40,0.50,0.60,0.75,1.00)
#beta2[1:4] <- c(1.45,1.5,1.55,1.6)
# these are not true mediators
alpha[11:12] <- 0.75
beta1[9:10] <- 0.75
sim_data<-simdata(n,p,alpha,beta1,seed=v)
results_Pscw_n300p1000[[v]]=myhima(sim_data,method='Psuni',v)
results_Iptw_n300p1000[[v]]=myhima(sim_data,method='Iptw',v)
results_Pscov_n300p1000[[v]]=myhima(sim_data,method='Pscov',v)
results_Non_n300p1000[[v]]=myhima(sim_data,method='Non',v)
results_Cov_n300p1000[[v]]=myhima(sim_data,method='Cov',v)
}
## a*b estimation
{
estimate_ab_Pscw<-matrix(c(rep(0,4000)),500,8,
dimnames=list(NULL,c("M1", "M2","M3", "M4","M5","M6","M7","M8")))
estimate_ab_Iptw<-matrix(c(rep(0,4000)),500,8,
dimnames=list(NULL,c("M1", "M2","M3", "M4","M5","M6","M7","M8")))
estimate_ab_Non<-matrix(c(rep(0,4000)),500,8,
dimnames=list(NULL,c("M1", "M2","M3", "M4","M5","M6","M7","M8")))
estimate_ab_Pscov<-matrix(c(rep(0,4000)),500,8,
dimnames=list(NULL,c("M1", "M2","M3", "M4","M5","M6","M7","M8")))
estimate_ab_Cov<-matrix(c(rep(0,4000)),500,8,
dimnames=list(NULL,c("M1", "M2","M3", "M4","M5","M6","M7","M8")))
for (i in 1:500){
estimate_ab_Pscw[i,1]<-results_Pscw_n300p1000[[i]]["M1",4]
estimate_ab_Pscw[i,2]<-results_Pscw_n300p1000[[i]]["M2",4]
estimate_ab_Pscw[i,3]<-results_Pscw_n300p1000[[i]]["M3",4]
estimate_ab_Pscw[i,4]<-results_Pscw_n300p1000[[i]]["M4",4]
estimate_ab_Pscw[i,5]<-results_Pscw_n300p1000[[i]]["M5",4]
estimate_ab_Pscw[i,6]<-results_Pscw_n300p1000[[i]]["M6",4]
estimate_ab_Pscw[i,7]<-results_Pscw_n300p1000[[i]]["M7",4]
estimate_ab_Pscw[i,8]<-results_Pscw_n300p1000[[i]]["M8",4]
estimate_ab_Iptw[i,1]<-results_Iptw_n300p1000[[i]]["M1",4]
estimate_ab_Iptw[i,2]<-results_Iptw_n300p1000[[i]]["M2",4]
estimate_ab_Iptw[i,3]<-results_Iptw_n300p1000[[i]]["M3",4]
estimate_ab_Iptw[i,4]<-results_Iptw_n300p1000[[i]]["M4",4]
estimate_ab_Iptw[i,5]<-results_Iptw_n300p1000[[i]]["M5",4]
estimate_ab_Iptw[i,6]<-results_Iptw_n300p1000[[i]]["M6",4]
estimate_ab_Iptw[i,7]<-results_Iptw_n300p1000[[i]]["M7",4]
estimate_ab_Iptw[i,8]<-results_Iptw_n300p1000[[i]]["M8",4]
estimate_ab_Non[i,1]<-results_Non_n300p1000[[i]]["M1",4]
estimate_ab_Non[i,2]<-results_Non_n300p1000[[i]]["M2",4]
estimate_ab_Non[i,3]<-results_Non_n300p1000[[i]]["M3",4]
estimate_ab_Non[i,4]<-results_Non_n300p1000[[i]]["M4",4]
estimate_ab_Non[i,5]<-results_Non_n300p1000[[i]]["M5",4]
estimate_ab_Non[i,6]<-results_Non_n300p1000[[i]]["M6",4]
estimate_ab_Non[i,7]<-results_Non_n300p1000[[i]]["M7",4]
estimate_ab_Non[i,8]<-results_Non_n300p1000[[i]]["M8",4]
estimate_ab_Pscov[i,1]<-results_Pscov_n300p1000[[i]]["M1",4]
estimate_ab_Pscov[i,2]<-results_Pscov_n300p1000[[i]]["M2",4]
estimate_ab_Pscov[i,3]<-results_Pscov_n300p1000[[i]]["M3",4]
estimate_ab_Pscov[i,4]<-results_Pscov_n300p1000[[i]]["M4",4]
estimate_ab_Pscov[i,5]<-results_Pscov_n300p1000[[i]]["M5",4]
estimate_ab_Pscov[i,6]<-results_Pscov_n300p1000[[i]]["M6",4]
estimate_ab_Pscov[i,7]<-results_Pscov_n300p1000[[i]]["M7",4]
estimate_ab_Pscov[i,8]<-results_Pscov_n300p1000[[i]]["M8",4]
estimate_ab_Cov[i,1]<-results_Cov_n300p1000[[i]]["M1",4]
estimate_ab_Cov[i,2]<-results_Cov_n300p1000[[i]]["M2",4]
estimate_ab_Cov[i,3]<-results_Cov_n300p1000[[i]]["M3",4]
estimate_ab_Cov[i,4]<-results_Cov_n300p1000[[i]]["M4",4]
estimate_ab_Cov[i,5]<-results_Cov_n300p1000[[i]]["M5",4]
estimate_ab_Cov[i,6]<-results_Cov_n300p1000[[i]]["M6",4]
estimate_ab_Cov[i,7]<-results_Cov_n300p1000[[i]]["M7",4]
estimate_ab_Cov[i,8]<-results_Cov_n300p1000[[i]]["M8",4]
}
est_Pscw=data.frame(rbind(colMeans(estimate_ab_Pscw,na.rm=T),
(colSds(estimate_ab_Pscw,na.rm=T))**2),row.names = c('mean','sd'))
est_Pscw['method']='Pscw'
est_Pscov=data.frame(rbind(colMeans(estimate_ab_Pscov,na.rm=T),
(colSds(estimate_ab_Pscov,na.rm=T))**2),row.names = c('mean','sd'))
est_Pscov['method']='Pscov'
est_Iptw=data.frame(rbind(colMeans(estimate_ab_Iptw,na.rm=T),
(colSds(estimate_ab_Iptw,na.rm=T))**2),row.names = c('mean','sd'))
est_Iptw['method']='Iptw'
est_Cov=data.frame(rbind(colMeans(estimate_ab_Cov,na.rm=T),
(colSds(estimate_ab_Cov,na.rm=T))**2),row.names = c('mean','sd'))
est_Cov['method']='Cov'
est_Non=data.frame(rbind(colMeans(estimate_ab_Non,na.rm=T),
(colSds(estimate_ab_Non,na.rm=T))**2),row.names = c('mean','sd'))
est_Non['method']='Non'
est=rbind(est_Pscw,est_Pscov,est_Iptw,est_Cov,est_Non)
rm(est_Pscw,est_Pscov,est_Iptw,est_Cov,est_Non,estimate_ab_Cov,estimate_ab_Iptw,estimate_ab_Non,
estimate_ab_Pscov,estimate_ab_Pscw)
}
## MCP&testing estimation
choose=function(results)
{
M<-matrix(c(rep(0,4000)),500,8,dimnames = list(NULL,c("M1", "M2","M3", "M4","M5","M6","M7","M8")))
Mt<-matrix(c(rep(0,4000)),500,8,dimnames = list(NULL,c("M1", "M2","M3", "M4","M5","M6","M7","M8")))
for(i in 1:500){
M[i,1]<-"M1"%in%rownames(results[[i]])
M[i,2]<-"M2"%in%rownames(results[[i]])
M[i,3]<-"M3"%in%rownames(results[[i]])
M[i,4]<-"M4"%in%rownames(results[[i]])
M[i,5]<-"M5"%in%rownames(results[[i]])
M[i,6]<-"M6"%in%rownames(results[[i]])
M[i,7]<-"M7"%in%rownames(results[[i]])
M[i,8]<-"M8"%in%rownames(results[[i]])
Mt[i,1]<-"M1"%in%rownames(results[[i]]) & results[[i]]['M1','BH.FDR']<0.05
Mt[i,2]<-"M2"%in%rownames(results[[i]]) & results[[i]]['M2','BH.FDR']<0.05
Mt[i,3]<-"M3"%in%rownames(results[[i]]) & results[[i]]['M3','BH.FDR']<0.05
Mt[i,4]<-"M4"%in%rownames(results[[i]]) & results[[i]]['M4','BH.FDR']<0.05
Mt[i,5]<-"M5"%in%rownames(results[[i]]) & results[[i]]['M5','BH.FDR']<0.05
Mt[i,6]<-"M6"%in%rownames(results[[i]]) & results[[i]]['M6','BH.FDR']<0.05
Mt[i,7]<-"M7"%in%rownames(results[[i]]) & results[[i]]['M7','BH.FDR']<0.05
Mt[i,8]<-"M8"%in%rownames(results[[i]]) & results[[i]]['M8','BH.FDR']<0.05
}
return(data.frame(rbind(colSums(M),colSums(Mt)),row.names=c('MCPselection','Testing')))
}
{
Choose_Cov=data.frame(choose(results_Cov_n300p1000))
Choose_Cov['Method']='Cov'
Choose_Iptw=data.frame(choose(results_Iptw_n300p1000))
Choose_Iptw['Method']='Iptw'
Choose_Pscov=data.frame(choose(results_Pscov_n300p1000))
Choose_Pscov['Method']='Pscov'
Choose_Non=data.frame(choose(results_Non_n300p1000))
Choose_Non['Method']='Non'
Choose_Psuni=data.frame(choose(results_Pscw_n300p1000))
Choose_Psuni['Method']='Psuni'
MCPandtesting=data.frame(rbind(Choose_Cov,Choose_Iptw,Choose_Pscov,Choose_Non,Choose_Psuni))
rm(Choose_Cov,Choose_Iptw,Choose_Pscov,Choose_Non,Choose_Psuni)
}
fpr_num=function(results){
fpr<-c()
for (j in 1:500)
{
miss<-c()
fp<-setdiff(rownames(results[[j]]),c("M1", "M2","M3", "M4",'M5','M6','M7','M8'))
for (i in 1:length(fp))
{
miss[i]=results[[j]][fp[i],'BH.FDR']<0.05
fpr[j]<-sum(miss)
}
}
return(mean(fpr))
}
Fpr=rbind(fpr_num(results_Cov_n300p1000),fpr_num(results_Pscov_n300p1000),
fpr_num(results_Iptw_n300p1000),fpr_num(results_Pscw_n300p1000),fpr_num(results_Non_n300p1000))
Fpr=data.frame(Fpr,
row.names=c('Cov','Pscov','Iptw','Pscw','Non'))
Fpr
View(MCPandtesting)
est[Which(est$method=='Cov'),]
est[which(est$method=='Cov'),]
est[which(est$method=='Pscov'),]
est[which(est$method=='Iptw'),]
est[which(est$method=='Pscw'),]
Fpr
# FDR (假阳性/总阳性)
FDR=function(results){
fpr<-c()
tp<-c()
fdr<-c()
for (j in 1:500)
{
#results = results_Iptw_n300p10000
miss<-c()
fp<-setdiff(rownames(results[[j]]),c("M1", "M2","M3", "M4",'M5','M6','M7','M8'))
for (i in 1:length(fp))
{
miss[i]=results[[j]][fp[i],'BH.FDR']<0.05
fpr[j]<-sum(miss)
}
tp[j] = sum(results[[j]][,'BH.FDR']<0.05)
}
return(mean(fpr/tp,na.rm = TRUE))
}
Fpr=rbind(fpr_num(results_Cov_n300p1000),fpr_num(results_Pscov_n300p1000),
fpr_num(results_Iptw_n300p1000),fpr_num(results_Pscw_n300p1000),fpr_num(results_Non_n30p10000))
Fpr=data.frame(Fpr,
row.names=c('Cov','Pscov','Iptw','Pscw','Non'))
Fpr
# FDR - 每一次假阳性比例
Fdr=rbind(FDR(results_Cov_n300p1000),FDR(results_Pscov_n300p1000),
FDR(results_Iptw_n300p1000),FDR(results_Pscw_n300p1000),FDR(results_Non_n300p1000))
Fdr=data.frame(Fdr,
row.names=c('Cov','Pscov','Iptw','Pscw','Non'))
Fdr
# 假阳性-平均每一次假阳性个数
fpr_num=function(results){
fpr<-c()
for (j in 1:500)
{
# results = results_Cov_n300p10000
miss<-c()
fp<-setdiff(rownames(results[[j]]),c("M1", "M2","M3", "M4",'M5','M6','M7','M8'))
for (i in 1:length(fp))
{
miss[i]=results[[j]][fp[i],'BH.FDR']<0.05
fpr[j]<-sum(miss)
}
}
return(mean(fpr))
}
# FDR (假阳性/总阳性)
FDR=function(results){
fpr<-c()
tp<-c()
fdr<-c()
for (j in 1:500)
{
#results = results_Iptw_n300p10000
miss<-c()
fp<-setdiff(rownames(results[[j]]),c("M1", "M2","M3", "M4",'M5','M6','M7','M8'))
for (i in 1:length(fp))
{
miss[i]=results[[j]][fp[i],'BH.FDR']<0.05
fpr[j]<-sum(miss)
}
tp[j] = sum(results[[j]][,'BH.FDR']<0.05)
}
return(mean(fpr/tp,na.rm = TRUE))
}
Fpr=rbind(fpr_num(results_Cov_n300p1000),fpr_num(results_Pscov_n300p1000),
fpr_num(results_Iptw_n300p1000),fpr_num(results_Pscw_n300p1000),fpr_num(results_Non_n300p1000))
Fpr=data.frame(Fpr,
row.names=c('Cov','Pscov','Iptw','Pscw','Non'))
Fpr
# FDR - 每一次假阳性比例
Fdr=rbind(FDR(results_Cov_n300p1000),FDR(results_Pscov_n300p1000),
FDR(results_Iptw_n300p1000),FDR(results_Pscw_n300p1000),FDR(results_Non_n300p1000))
Fdr=data.frame(Fdr,
row.names=c('Cov','Pscov','Iptw','Pscw','Non'))
Fdr
Fpr
## a*b estimation
{
estimate_ab_Pscw<-matrix(c(rep(0,4000)),500,8,
dimnames=list(NULL,c("M1", "M2","M3", "M4","M5","M6","M7","M8")))
estimate_ab_Iptw<-matrix(c(rep(0,4000)),500,8,
dimnames=list(NULL,c("M1", "M2","M3", "M4","M5","M6","M7","M8")))
estimate_ab_Non<-matrix(c(rep(0,4000)),500,8,
dimnames=list(NULL,c("M1", "M2","M3", "M4","M5","M6","M7","M8")))
estimate_ab_Pscov<-matrix(c(rep(0,4000)),500,8,
dimnames=list(NULL,c("M1", "M2","M3", "M4","M5","M6","M7","M8")))
estimate_ab_Cov<-matrix(c(rep(0,4000)),500,8,
dimnames=list(NULL,c("M1", "M2","M3", "M4","M5","M6","M7","M8")))
for (i in 1:500){
estimate_ab_Pscw[i,1]<-results_Pscw_n300p1000[[i]]["M1",4]
estimate_ab_Pscw[i,2]<-results_Pscw_n300p1000[[i]]["M2",4]
estimate_ab_Pscw[i,3]<-results_Pscw_n300p1000[[i]]["M3",4]
estimate_ab_Pscw[i,4]<-results_Pscw_n300p1000[[i]]["M4",4]
estimate_ab_Pscw[i,5]<-results_Pscw_n300p1000[[i]]["M5",4]
estimate_ab_Pscw[i,6]<-results_Pscw_n300p1000[[i]]["M6",4]
estimate_ab_Pscw[i,7]<-results_Pscw_n300p1000[[i]]["M7",4]
estimate_ab_Pscw[i,8]<-results_Pscw_n300p1000[[i]]["M8",4]
estimate_ab_Iptw[i,1]<-results_Iptw_n300p1000[[i]]["M1",4]
estimate_ab_Iptw[i,2]<-results_Iptw_n300p1000[[i]]["M2",4]
estimate_ab_Iptw[i,3]<-results_Iptw_n300p1000[[i]]["M3",4]
estimate_ab_Iptw[i,4]<-results_Iptw_n300p1000[[i]]["M4",4]
estimate_ab_Iptw[i,5]<-results_Iptw_n300p1000[[i]]["M5",4]
estimate_ab_Iptw[i,6]<-results_Iptw_n300p1000[[i]]["M6",4]
estimate_ab_Iptw[i,7]<-results_Iptw_n300p1000[[i]]["M7",4]
estimate_ab_Iptw[i,8]<-results_Iptw_n300p1000[[i]]["M8",4]
estimate_ab_Non[i,1]<-results_Non_n300p1000[[i]]["M1",4]
estimate_ab_Non[i,2]<-results_Non_n300p1000[[i]]["M2",4]
estimate_ab_Non[i,3]<-results_Non_n300p1000[[i]]["M3",4]
estimate_ab_Non[i,4]<-results_Non_n300p1000[[i]]["M4",4]
estimate_ab_Non[i,5]<-results_Non_n300p1000[[i]]["M5",4]
estimate_ab_Non[i,6]<-results_Non_n300p1000[[i]]["M6",4]
estimate_ab_Non[i,7]<-results_Non_n300p1000[[i]]["M7",4]
estimate_ab_Non[i,8]<-results_Non_n300p1000[[i]]["M8",4]
estimate_ab_Pscov[i,1]<-results_Pscov_n300p1000[[i]]["M1",4]
estimate_ab_Pscov[i,2]<-results_Pscov_n300p1000[[i]]["M2",4]
estimate_ab_Pscov[i,3]<-results_Pscov_n300p1000[[i]]["M3",4]
estimate_ab_Pscov[i,4]<-results_Pscov_n300p1000[[i]]["M4",4]
estimate_ab_Pscov[i,5]<-results_Pscov_n300p1000[[i]]["M5",4]
estimate_ab_Pscov[i,6]<-results_Pscov_n300p1000[[i]]["M6",4]
estimate_ab_Pscov[i,7]<-results_Pscov_n300p1000[[i]]["M7",4]
estimate_ab_Pscov[i,8]<-results_Pscov_n300p1000[[i]]["M8",4]
estimate_ab_Cov[i,1]<-results_Cov_n300p1000[[i]]["M1",4]
estimate_ab_Cov[i,2]<-results_Cov_n300p1000[[i]]["M2",4]
estimate_ab_Cov[i,3]<-results_Cov_n300p1000[[i]]["M3",4]
estimate_ab_Cov[i,4]<-results_Cov_n300p1000[[i]]["M4",4]
estimate_ab_Cov[i,5]<-results_Cov_n300p1000[[i]]["M5",4]
estimate_ab_Cov[i,6]<-results_Cov_n300p1000[[i]]["M6",4]
estimate_ab_Cov[i,7]<-results_Cov_n300p1000[[i]]["M7",4]
estimate_ab_Cov[i,8]<-results_Cov_n300p1000[[i]]["M8",4]
}
est_Pscw=data.frame(rbind(colMeans(estimate_ab_Pscw,na.rm=T),
(colSds(estimate_ab_Pscw,na.rm=T))**2),row.names = c('mean','sd'))
est_Pscw['method']='Pscw'
est_Pscov=data.frame(rbind(colMeans(estimate_ab_Pscov,na.rm=T),
(colSds(estimate_ab_Pscov,na.rm=T))**2),row.names = c('mean','sd'))
est_Pscov['method']='Pscov'
est_Iptw=data.frame(rbind(colMeans(estimate_ab_Iptw,na.rm=T),
(colSds(estimate_ab_Iptw,na.rm=T))**2),row.names = c('mean','sd'))
est_Iptw['method']='Iptw'
est_Cov=data.frame(rbind(colMeans(estimate_ab_Cov,na.rm=T),
(colSds(estimate_ab_Cov,na.rm=T))**2),row.names = c('mean','sd'))
est_Cov['method']='Cov'
est_Non=data.frame(rbind(colMeans(estimate_ab_Non,na.rm=T),
(colSds(estimate_ab_Non,na.rm=T))**2),row.names = c('mean','sd'))
est_Non['method']='Non'
est=rbind(est_Pscw,est_Pscov,est_Iptw,est_Cov,est_Non)
rm(est_Pscw,est_Pscov,est_Iptw,est_Cov,est_Non,estimate_ab_Cov,estimate_ab_Iptw,estimate_ab_Non,
estimate_ab_Pscov,estimate_ab_Pscw)
}
## MCP&testing estimation
choose=function(results)
{
M<-matrix(c(rep(0,4000)),500,8,dimnames = list(NULL,c("M1", "M2","M3", "M4","M5","M6","M7","M8")))
Mt<-matrix(c(rep(0,4000)),500,8,dimnames = list(NULL,c("M1", "M2","M3", "M4","M5","M6","M7","M8")))
for(i in 1:500){
M[i,1]<-"M1"%in%rownames(results[[i]])
M[i,2]<-"M2"%in%rownames(results[[i]])
M[i,3]<-"M3"%in%rownames(results[[i]])
M[i,4]<-"M4"%in%rownames(results[[i]])
M[i,5]<-"M5"%in%rownames(results[[i]])
M[i,6]<-"M6"%in%rownames(results[[i]])
M[i,7]<-"M7"%in%rownames(results[[i]])
M[i,8]<-"M8"%in%rownames(results[[i]])
Mt[i,1]<-"M1"%in%rownames(results[[i]]) & results[[i]]['M1','BH.FDR']<0.05
Mt[i,2]<-"M2"%in%rownames(results[[i]]) & results[[i]]['M2','BH.FDR']<0.05
Mt[i,3]<-"M3"%in%rownames(results[[i]]) & results[[i]]['M3','BH.FDR']<0.05
Mt[i,4]<-"M4"%in%rownames(results[[i]]) & results[[i]]['M4','BH.FDR']<0.05
Mt[i,5]<-"M5"%in%rownames(results[[i]]) & results[[i]]['M5','BH.FDR']<0.05
Mt[i,6]<-"M6"%in%rownames(results[[i]]) & results[[i]]['M6','BH.FDR']<0.05
Mt[i,7]<-"M7"%in%rownames(results[[i]]) & results[[i]]['M7','BH.FDR']<0.05
Mt[i,8]<-"M8"%in%rownames(results[[i]]) & results[[i]]['M8','BH.FDR']<0.05
}
return(data.frame(rbind(colSums(M),colSums(Mt)),row.names=c('MCPselection','Testing')))
}
{
Choose_Cov=data.frame(choose(results_Cov_n300p1000))
Choose_Cov['Method']='Cov'
Choose_Iptw=data.frame(choose(results_Iptw_n300p1000))
Choose_Iptw['Method']='Iptw'
Choose_Pscov=data.frame(choose(results_Pscov_n300p1000))
Choose_Pscov['Method']='Pscov'
Choose_Non=data.frame(choose(results_Non_n300p1000))
Choose_Non['Method']='Non'
Choose_Psuni=data.frame(choose(results_Pscw_n300p1000))
Choose_Psuni['Method']='Psuni'
MCPandtesting=data.frame(rbind(Choose_Cov,Choose_Iptw,Choose_Pscov,Choose_Non,Choose_Psuni))
rm(Choose_Cov,Choose_Iptw,Choose_Pscov,Choose_Non,Choose_Psuni)
}
# 假阳性-平均每一次假阳性个数
fpr_num=function(results){
fpr<-c()
for (j in 1:500)
{
# results = results_Cov_n300p10000
miss<-c()
fp<-setdiff(rownames(results[[j]]),c("M1", "M2","M3", "M4",'M5','M6','M7','M8'))
for (i in 1:length(fp))
{
miss[i]=results[[j]][fp[i],'BH.FDR']<0.05
fpr[j]<-sum(miss)
}
}
return(mean(fpr))
}
# FDR (假阳性/总阳性)
FDR=function(results){
fpr<-c()
tp<-c()
fdr<-c()
for (j in 1:500)
{
#results = results_Iptw_n300p10000
miss<-c()
fp<-setdiff(rownames(results[[j]]),c("M1", "M2","M3", "M4",'M5','M6','M7','M8'))
for (i in 1:length(fp))
{
miss[i]=results[[j]][fp[i],'BH.FDR']<0.05
fpr[j]<-sum(miss)
}
tp[j] = sum(results[[j]][,'BH.FDR']<0.05)
}
return(mean(fpr/tp,na.rm = TRUE))
}
Fpr=rbind(fpr_num(results_Cov_n300p1000),fpr_num(results_Pscov_n300p1000),
fpr_num(results_Iptw_n300p1000),fpr_num(results_Pscw_n300p1000),fpr_num(results_Non_n300p1000))
Fpr=data.frame(Fpr,
row.names=c('Cov','Pscov','Iptw','Pscw','Non'))
Fpr
# FDR - 每一次假阳性比例
Fdr=rbind(FDR(results_Cov_n300p1000),FDR(results_Pscov_n300p1000),
FDR(results_Iptw_n300p1000),FDR(results_Pscw_n300p1000),FDR(results_Non_n300p1000))
Fdr=data.frame(Fdr,
row.names=c('Cov','Pscov','Iptw','Pscw','Non'))
Fdr
Fpr
Fdr
